// <auto-generated />
using System;
using AssetManager.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace AssetManager.Migrations
{
    [DbContext(typeof(DataContext))]
    [Migration("20220804000716_init")]
    partial class init
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("AssetManager.Model.AssetModel", b =>
                {
                    b.Property<int>("IdAsset")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<DateTime>("AcquisitionDate")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("AssetName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<ulong>("AssetPriceInCents")
                        .HasColumnType("bigint unsigned");

                    b.Property<string>("Decription")
                        .HasColumnType("longtext");

                    b.Property<int?>("DepreciationTaxInCents")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ExclusionDate")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("ExclusionInfos")
                        .HasColumnType("longtext");

                    b.Property<int>("IdCompany")
                        .HasColumnType("int")
                        .HasColumnName("IdCompany");

                    b.Property<string>("Status")
                        .HasMaxLength(64)
                        .HasColumnType("varchar(64)");

                    b.HasKey("IdAsset");

                    b.HasIndex("IdCompany");

                    b.ToTable("tb_asset");
                });

            modelBuilder.Entity("AssetManager.Model.CompanyModel", b =>
                {
                    b.Property<int>("IdCompany")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Cnpj")
                        .HasMaxLength(14)
                        .HasColumnType("varchar(14)");

                    b.Property<string>("CompanyName")
                        .HasColumnType("longtext");

                    b.Property<bool>("IsAtiva")
                        .HasColumnType("tinyint(1)");

                    b.HasKey("IdCompany");

                    b.ToTable("tb_company");
                });

            modelBuilder.Entity("AssetManager.Model.LoanAssetModel", b =>
                {
                    b.Property<string>("IdLoanAsset")
                        .HasMaxLength(32)
                        .HasColumnType("varchar(32)")
                        .HasColumnName("IdLoanAsset");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<DateTime?>("DevolutionDate")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("IdAsset")
                        .HasColumnType("int");

                    b.Property<int>("IdCompany")
                        .HasColumnType("int");

                    b.Property<string>("IdUsuario")
                        .IsRequired()
                        .HasColumnType("varchar(32)");

                    b.Property<DateTime>("LoanDate")
                        .HasColumnType("datetime(6)");

                    b.HasKey("IdLoanAsset");

                    b.HasIndex("IdAsset");

                    b.HasIndex("IdCompany");

                    b.HasIndex("IdUsuario");

                    b.ToTable("tb_loanasset");
                });

            modelBuilder.Entity("AssetManager.Model.UserModel", b =>
                {
                    b.Property<string>("IdUsuario")
                        .HasMaxLength(32)
                        .HasColumnType("varchar(32)")
                        .HasColumnName("IdUsuario");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("varchar(256)");

                    b.Property<int>("IdCompany")
                        .HasColumnType("int")
                        .HasColumnName("IdCompany");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Role")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Token")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<bool>("isActive")
                        .HasColumnType("tinyint(1)");

                    b.HasKey("IdUsuario");

                    b.HasIndex("IdCompany");

                    b.ToTable("tb_usuario");
                });

            modelBuilder.Entity("AssetManager.Model.AssetModel", b =>
                {
                    b.HasOne("AssetManager.Model.CompanyModel", "Company")
                        .WithMany()
                        .HasForeignKey("IdCompany")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Company");
                });

            modelBuilder.Entity("AssetManager.Model.LoanAssetModel", b =>
                {
                    b.HasOne("AssetManager.Model.AssetModel", "Asset")
                        .WithMany()
                        .HasForeignKey("IdAsset")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("AssetManager.Model.CompanyModel", "Company")
                        .WithMany()
                        .HasForeignKey("IdCompany")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("AssetManager.Model.UserModel", "Usuario")
                        .WithMany()
                        .HasForeignKey("IdUsuario")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Asset");

                    b.Navigation("Company");

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("AssetManager.Model.UserModel", b =>
                {
                    b.HasOne("AssetManager.Model.CompanyModel", "Company")
                        .WithMany()
                        .HasForeignKey("IdCompany")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Company");
                });
#pragma warning restore 612, 618
        }
    }
}
